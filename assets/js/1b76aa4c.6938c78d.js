"use strict";(self.webpackChunkflutter_rust_bridge=self.webpackChunkflutter_rust_bridge||[]).push([[6774],{3905:(e,r,t)=>{t.d(r,{Zo:()=>c,kt:()=>d});var n=t(67294);function i(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function a(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){i(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function u(e,r){if(null==e)return{};var t,n,i=function(e,r){if(null==e)return{};var t,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(i[t]=e[t]);return i}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var s=n.createContext({}),l=function(e){var r=n.useContext(s),t=r;return e&&(t="function"==typeof e?e(r):a(a({},r),e)),t},c=function(e){var r=l(e.components);return n.createElement(s.Provider,{value:r},e.children)},f={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},p=n.forwardRef((function(e,r){var t=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,c=u(e,["components","mdxType","originalType","parentName"]),p=l(t),d=i,m=p["".concat(s,".").concat(d)]||p[d]||f[d]||o;return t?n.createElement(m,a(a({ref:r},c),{},{components:t})):n.createElement(m,a({ref:r},c))}));function d(e,r){var t=arguments,i=r&&r.mdxType;if("string"==typeof e||i){var o=t.length,a=new Array(o);a[0]=p;var u={};for(var s in r)hasOwnProperty.call(r,s)&&(u[s]=r[s]);u.originalType=e,u.mdxType="string"==typeof e?e:i,a[1]=u;for(var l=2;l<o;l++)a[l]=t[l];return n.createElement.apply(null,a)}return n.createElement.apply(null,t)}p.displayName="MDXCreateElement"},68637:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>s,contentTitle:()=>a,default:()=>f,frontMatter:()=>o,metadata:()=>u,toc:()=>l});var n=t(87462),i=(t(67294),t(3905));const o={},a="Return references",u={unversionedId:"guides/lifetimes/return-references",id:"guides/lifetimes/return-references",title:"Return references",description:"Suppose we have the following function:",source:"@site/docs/guides/lifetimes/return-references.md",sourceDirName:"guides/lifetimes",slug:"/guides/lifetimes/return-references",permalink:"/flutter_rust_bridge/guides/lifetimes/return-references",draft:!1,editUrl:"https://github.com/fzyzcjy/flutter_rust_bridge/tree/master/website/docs/guides/lifetimes/return-references.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Types with lifetimes",permalink:"/flutter_rust_bridge/guides/lifetimes/type-with-lifetimes"},next:{title:"Multi borrows",permalink:"/flutter_rust_bridge/guides/lifetimes/multi-borrows"}},s={},l=[],c={toc:l};function f(e){let{components:r,...t}=e;return(0,i.kt)("wrapper",(0,n.Z)({},c,t,{components:r,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"return-references"},"Return references"),(0,i.kt)("p",null,"Suppose we have the following function:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-rust"},"fn f<'a>(foo: &'a Foo) -> &'a Bar { .. }\n")),(0,i.kt)("p",null,"The return type ",(0,i.kt)("inlineCode",{parentName:"p"},"&Bar")," is not ",(0,i.kt)("em",{parentName:"p"},"yet")," supported (but should be there in the future).\nHowever, we can workaround it as follows, by creating a very simple wrapper struct:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-rust"},"pub struct BarReference<'a>(&'a Bar);\n\nfn f<'a>(foo: &'a Foo) -> BarReference<'a> { .. }\n")),(0,i.kt)("p",null,"Then, the scenario becomes what has been discussed in the last page, and flutter_rust_bridge can handle it."))}f.isMDXComponent=!0}}]);