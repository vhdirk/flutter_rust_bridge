"use strict";(self.webpackChunkflutter_rust_bridge=self.webpackChunkflutter_rust_bridge||[]).push([[3977],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),h=s(n),d=o,m=h["".concat(l,".").concat(d)]||h[d]||u[d]||a;return n?r.createElement(m,c(c({ref:t},p),{},{components:n})):r.createElement(m,c({ref:t},p))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,c=new Array(a);c[0]=h;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:o,c[1]=i;for(var s=2;s<a;s++)c[s]=n[s];return r.createElement.apply(null,c)}return r.createElement.apply(null,n)}h.displayName="MDXCreateElement"},26246:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>c,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>s});var r=n(87462),o=(n(67294),n(3905));const a={},c="Cancellable tasks",i={unversionedId:"guides/how-to/cancel",id:"guides/how-to/cancel",title:"Cancellable tasks",description:"When the Rust code is computationally heavy, you may want to cancel it at the middle when,",source:"@site/docs/guides/how-to/cancel.md",sourceDirName:"guides/how-to",slug:"/guides/how-to/cancel",permalink:"/flutter_rust_bridge/guides/how-to/cancel",draft:!1,editUrl:"https://github.com/fzyzcjy/flutter_rust_bridge/tree/master/website/docs/guides/how-to/cancel.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Testing and mocking",permalink:"/flutter_rust_bridge/guides/how-to/test"},next:{title:"Inspection / Hooks / Aspect-oriented programming",permalink:"/flutter_rust_bridge/guides/how-to/inspect"}},l={},s=[{value:"Approach 1: Simple CancelToken",id:"approach-1-simple-canceltoken",level:2},{value:"Approach 2: Tokio CancellationToken",id:"approach-2-tokio-cancellationtoken",level:2},{value:"Approach 3: Whatever cancel token crates",id:"approach-3-whatever-cancel-token-crates",level:2}],p={toc:s};function u(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"cancellable-tasks"},"Cancellable tasks"),(0,o.kt)("p",null,"When the Rust code is computationally heavy, you may want to cancel it at the middle when,\nfor example, the user does not need it anymore.\nThen the precious computation power can be saved."),(0,o.kt)("h2",{id:"approach-1-simple-canceltoken"},"Approach 1: Simple CancelToken"),(0,o.kt)("p",null,"This is just a simple struct that,\non one side can signal cancel commands,\nand on the other side can observe whether it is signaled."),(0,o.kt)("p",null,"Installation: Currently, the feature is complete,\nand I have used it in my own app for a long time.\n(I have not merge this PR to the main repo just because I need to figure out how to put those code as if in ",(0,o.kt)("inlineCode",{parentName:"p"},"api.rs"),".)\nThus, visit ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/fzyzcjy/flutter_rust_bridge/pull/333"},"#333")," and copy the code directly to your project, and use it as normal."),(0,o.kt)("h2",{id:"approach-2-tokio-cancellationtoken"},"Approach 2: Tokio CancellationToken"),(0,o.kt)("p",null,"If you are using asynchronous Rust, ",(0,o.kt)("inlineCode",{parentName:"p"},"tokio")," does provide a cancel token utility\nuseful in the async environment:\n",(0,o.kt)("a",{parentName:"p",href:"https://docs.rs/tokio-util/latest/tokio_util/sync/struct.CancellationToken.html"},"https://docs.rs/tokio-util/latest/tokio_util/sync/struct.CancellationToken.html")),(0,o.kt)("h2",{id:"approach-3-whatever-cancel-token-crates"},"Approach 3: Whatever cancel token crates"),(0,o.kt)("p",null,"Since the feature is so simple, it is easy to home-make one by yourself (e.g. I have made one above).\nOr use any crate, e.g. ",(0,o.kt)("a",{parentName:"p",href:"https://crates.io/search?q=cancel"},"https://crates.io/search?q=cancel")," shows many crates about this."))}u.isMDXComponent=!0}}]);