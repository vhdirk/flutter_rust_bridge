"use strict";(self.webpackChunkflutter_rust_bridge=self.webpackChunkflutter_rust_bridge||[]).push([[6508],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),d=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=d(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=d(n),m=o,h=c["".concat(s,".").concat(m)]||c[m]||p[m]||i;return n?r.createElement(h,a(a({ref:t},u),{},{components:n})):r.createElement(h,a({ref:t},u))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=c;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var d=2;d<i;d++)a[d]=n[d];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},61693:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>l,toc:()=>d});var r=n(87462),o=(n(67294),n(3905));const i={},a="Troubleshooting",l={unversionedId:"manual/troubleshooting",id:"manual/troubleshooting",title:"Troubleshooting",description:"Linker complains undefined symbols",source:"@site/docs/manual/troubleshooting.md",sourceDirName:"manual",slug:"/manual/troubleshooting",permalink:"/flutter_rust_bridge/manual/troubleshooting",draft:!1,editUrl:"https://github.com/fzyzcjy/flutter_rust_bridge/tree/master/website/docs/manual/troubleshooting.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Manual",permalink:"/flutter_rust_bridge/manual/"},next:{title:"Ffigen Troubleshooting",permalink:"/flutter_rust_bridge/manual/ffigen-troubleshooting"}},s={},d=[{value:"Linker complains undefined symbols",id:"linker-complains-undefined-symbols",level:2},{value:"Issues with glibc (e.g. <code>version GLIBC_2.33 not found</code>)",id:"issues-with-glibc-eg-version-glibc_233-not-found",level:2},{value:"Issue with <code>store_dart_post_cobject</code>",id:"issue-with-store_dart_post_cobject",level:2},{value:"Error running <code>cargo ndk</code>: <code>ld: error: unable to find library -lgcc</code>",id:"error-running-cargo-ndk-ld-error-unable-to-find-library--lgcc",level:2},{value:"Fail to run <code>flutter_rust_bridge_codegen</code> on MacOS, &quot;Please supply one or more path/to/llvm...&quot;",id:"fail-to-run-flutter_rust_bridge_codegen-on-macos-please-supply-one-or-more-pathtollvm",level:2},{value:"Freezed file is sometimes not generated when it should be",id:"freezed-file-is-sometimes-not-generated-when-it-should-be",level:2},{value:"<code>Can&#39;t create typedef from non-function type.</code>",id:"cant-create-typedef-from-non-function-type",level:2},{value:"Imported from both <code>bridge_definitions.dart</code> and <code>bridge_generated.io.dart</code>",id:"imported-from-both-bridge_definitionsdart-and-bridge_generatediodart",level:2},{value:"Error on iOS TestFlight only (<code>store_dart_post_cobject</code>)",id:"error-on-ios-testflight-only-store_dart_post_cobject",level:2},{value:"Generated code is so long",id:"generated-code-is-so-long",level:2},{value:"Why need Dart <code>2.17.0</code>",id:"why-need-dart-2170",level:2},{value:"Why doesn&#39;t <code>flutter_rust_bridge_serve</code> work on Firefox?",id:"why-doesnt-flutter_rust_bridge_serve-work-on-firefox",level:2},{value:"&quot;Could not resolve symbol __cxa_pure_virtual&quot;, or libc++_shared issues.",id:"could-not-resolve-symbol-__cxa_pure_virtual-or-libc_shared-issues",level:2},{value:"build.rs",id:"buildrs",level:3},{value:"Issues on Web?",id:"issues-on-web",level:2},{value:"Other problems?",id:"other-problems",level:2}],u={toc:d};function p(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"troubleshooting"},"Troubleshooting"),(0,o.kt)("h2",{id:"linker-complains-undefined-symbols"},"Linker complains undefined symbols"),(0,o.kt)("p",null,"e.g. ",(0,o.kt)("inlineCode",{parentName:"p"},"ld: Undefined symbols: std::__1::basic_string ...")),(0,o.kt)("p",null,"Please change the following line in iOS/macos podspec file:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"'OTHER_LDFLAGS' => '-force_load ${BUILT_PRODUCTS_DIR}/librust_lib.a',\n")),(0,o.kt)("p",null,"To something like:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"'OTHER_LDFLAGS' => '-force_load ${BUILT_PRODUCTS_DIR}/librust_lib.a -lc++',\n")),(0,o.kt)("p",null,"Or other libraries that you need (e.g. ",(0,o.kt)("inlineCode",{parentName:"p"},"-framework SystemConfiguration"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"-framework AudioToolbox"),", etc)."),(0,o.kt)("p",null,"Please refer to these issues for more\ndetails: ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/irondash/cargokit/issues/52"},"cargokit#52"),", ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/fzyzcjy/flutter_rust_bridge/issues/1610"},"bridge#1610"),"."),(0,o.kt)("p",null,"Another example, which solves the error when using ",(0,o.kt)("inlineCode",{parentName:"p"},"cpal"),", can be found in ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/fzyzcjy/flutter_rust_bridge/issues/1835#issuecomment-2020299630"},"#1835"),"."),(0,o.kt)("h2",{id:"issues-with-glibc-eg-version-glibc_233-not-found"},"Issues with glibc (e.g. ",(0,o.kt)("inlineCode",{parentName:"h2"},"version GLIBC_2.33 not found"),")"),(0,o.kt)("p",null,"As is discussed in ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/fzyzcjy/flutter_rust_bridge/issues/1753#issuecomment-1948241309"},"this issue"),"\nand ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/irondash/cargokit/issues/55"},"this issue"),":"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"This is a ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/canonical/flutter-snap/issues/109"},"https://github.com/canonical/flutter-snap/issues/109")," with Flutter Snap not being able to do LTO builds. Just\ninstall the Flutter regular way (without snap) and it should work.")),(0,o.kt)("h2",{id:"issue-with-store_dart_post_cobject"},"Issue with ",(0,o.kt)("inlineCode",{parentName:"h2"},"store_dart_post_cobject")),(0,o.kt)("p",null,"If calling rust function gives the error below, please consider running ",(0,o.kt)("strong",{parentName:"p"},"cargo build")," again. This can happen when the\ngenerated rs file is not included when building is being done."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"[ERROR:flutter/lib/ui/ui_dart_state.cc(209)] Unhandled Exception: Invalid argument(s): Failed to lookup symbol 'store_dart_post_cobject': target/debug/libadder.so: undefined symbol: store_dart_post_cobject\n")),(0,o.kt)("h2",{id:"error-running-cargo-ndk-ld-error-unable-to-find-library--lgcc"},"Error running ",(0,o.kt)("inlineCode",{parentName:"h2"},"cargo ndk"),": ",(0,o.kt)("inlineCode",{parentName:"h2"},"ld: error: unable to find library -lgcc")),(0,o.kt)("p",null,"Downgrade Android NDK to version 22. This is an ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/bbqsrc/cargo-ndk/issues/22"},"ongoing issue"),"\nwith ",(0,o.kt)("inlineCode",{parentName:"p"},"cargo-ndk"),", a library unrelated to flutter_rust_bridge but solely used to build the examples, when using Android\nNDK version 23. (See ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/fzyzcjy/flutter_rust_bridge/issues/149"},"#149"),")"),(0,o.kt)("h2",{id:"fail-to-run-flutter_rust_bridge_codegen-on-macos-please-supply-one-or-more-pathtollvm"},"Fail to run ",(0,o.kt)("inlineCode",{parentName:"h2"},"flutter_rust_bridge_codegen"),' on MacOS, "Please supply one or more path/to/llvm..."'),(0,o.kt)("p",null,"If you are running macOS, you will need to specify a path to your llvm:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"flutter_rust_bridge_codegen --rust-input path/to/your/api.rs --dart-output path/to/file/being/bridge_generated.dart --llvm-path /usr/local/homebrew/opt/llvm/\n")),(0,o.kt)("p",null,"You can install llvm using ",(0,o.kt)("inlineCode",{parentName:"p"},"brew install llvm")," and it will be installed at ",(0,o.kt)("inlineCode",{parentName:"p"},"/usr/local/homebrew/opt/llvm/")," by default."),(0,o.kt)("h2",{id:"freezed-file-is-sometimes-not-generated-when-it-should-be"},"Freezed file is sometimes not generated when it should be"),(0,o.kt)("p",null,"If your ",(0,o.kt)("inlineCode",{parentName:"p"},".freezed.dart")," or ",(0,o.kt)("inlineCode",{parentName:"p"},".g.dart")," seems outdated, ensure you have run the ",(0,o.kt)("inlineCode",{parentName:"p"},"build_runner"),"."),(0,o.kt)("p",null,"Related: ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/fzyzcjy/flutter_rust_bridge/issues/330"},"https://github.com/fzyzcjy/flutter_rust_bridge/issues/330")),(0,o.kt)("h2",{id:"cant-create-typedef-from-non-function-type"},(0,o.kt)("inlineCode",{parentName:"h2"},"Can't create typedef from non-function type.")),(0,o.kt)("p",null,"Ensure min sdk version of Flutter ",(0,o.kt)("inlineCode",{parentName:"p"},"pubspec.yaml")," is at least 2.17.0 to let ",(0,o.kt)("inlineCode",{parentName:"p"},"ffigen")," happy."),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/fzyzcjy/flutter_rust_bridge/issues/334"},"https://github.com/fzyzcjy/flutter_rust_bridge/issues/334")),(0,o.kt)("h2",{id:"imported-from-both-bridge_definitionsdart-and-bridge_generatediodart"},"Imported from both ",(0,o.kt)("inlineCode",{parentName:"h2"},"bridge_definitions.dart")," and ",(0,o.kt)("inlineCode",{parentName:"h2"},"bridge_generated.io.dart")),(0,o.kt)("p",null,"If you use a Rust type with ",(0,o.kt)("inlineCode",{parentName:"p"},"Kind")," in it's name it may conflict with some generated types which can cause a duplicate\nimport error. The workaround is to avoid using ",(0,o.kt)("inlineCode",{parentName:"p"},"Kind")," as a suffix for a type name in Rust. See issue #757 for more\ndetails."),(0,o.kt)("h2",{id:"error-on-ios-testflight-only-store_dart_post_cobject"},"Error on iOS TestFlight only (",(0,o.kt)("inlineCode",{parentName:"h2"},"store_dart_post_cobject"),")"),(0,o.kt)("p",null,"You may have an iOS app that works fine in Debug and Release modes locally but when deployed to TestFlight an error\noccurs trying to locate the ",(0,o.kt)("inlineCode",{parentName:"p"},"store_dart_post_cobject")," - this is because the nested XCode project for the native bindings\nmaybe be stripping symbols from the linked product."),(0,o.kt)("p",null,"Select the scheme (eg: ",(0,o.kt)("inlineCode",{parentName:"p"},"Product > Scheme > native-staticlib"),") and go to ",(0,o.kt)("em",{parentName:"p"},"Build Settings")," then under the ",(0,o.kt)("inlineCode",{parentName:"p"},"Deployment"),"\nsection change ",(0,o.kt)("inlineCode",{parentName:"p"},"Strip Linked Product")," to ",(0,o.kt)("inlineCode",{parentName:"p"},"No"),"; you may also need to change ",(0,o.kt)("inlineCode",{parentName:"p"},"Strip Style")," to ",(0,o.kt)("inlineCode",{parentName:"p"},"Debugging Symbols"),"."),(0,o.kt)("h2",{id:"generated-code-is-so-long"},"Generated code is so long"),(0,o.kt)("p",null,"Indeed all generated code are necessary (if you find something that can be simplified, file an issue). Moreover, other\ncode generation tools also generate long code - for example, when using Google protobuf, a very popular serialization\nlibrary, I see >10k lines of Java code generated for a quite simple source proto file."),(0,o.kt)("h2",{id:"why-need-dart-2170"},"Why need Dart ",(0,o.kt)("inlineCode",{parentName:"h2"},"2.17.0")),(0,o.kt)("p",null,"Dart SDK ",(0,o.kt)("inlineCode",{parentName:"p"},">=2.15.0")," is supported by this library, but by the latest version of the ",(0,o.kt)("inlineCode",{parentName:"p"},"ffigen")," tool requires ",(0,o.kt)("inlineCode",{parentName:"p"},">=2.17.0"),".\nTherefore, write ",(0,o.kt)("inlineCode",{parentName:"p"},'sdk: ">=2.17.0 <3.0.0"')," in the ",(0,o.kt)("inlineCode",{parentName:"p"},"environment")," section of ",(0,o.kt)("inlineCode",{parentName:"p"},"pubspec.yaml"),". If you do not want that,\nconsider installing a older version of the ",(0,o.kt)("inlineCode",{parentName:"p"},"ffigen")," tool."),(0,o.kt)("h2",{id:"why-doesnt-flutter_rust_bridge_serve-work-on-firefox"},"Why doesn't ",(0,o.kt)("inlineCode",{parentName:"h2"},"flutter_rust_bridge_serve")," work on Firefox?"),(0,o.kt)("p",null,"This is a known issue stemming from Firefox's stricter rules regarding cross-origin requests. Use Chromium for testing,\nand check out\n",(0,o.kt)("a",{parentName:"p",href:"https://web.dev/cross-origin-isolation-guide/"},"this guide on enabling ",(0,o.kt)("inlineCode",{parentName:"a"},"crossOriginIsolated"))," for your production\nservers."),(0,o.kt)("h2",{id:"could-not-resolve-symbol-__cxa_pure_virtual-or-libc_shared-issues"},'"Could not resolve symbol ',"_","_",'cxa_pure_virtual", or libc++',"_","shared issues."),(0,o.kt)("p",null,"At the time of writing this, linking with ",(0,o.kt)("inlineCode",{parentName:"p"},"libc++_static")," or not linking at all may lead to symbol resolution errors\nwhen launching the flutter application, after loading your dynamic library. Adding a fix is quite easy, create a\nbuild.rs script in the root of your Rust code:"),(0,o.kt)("h3",{id:"buildrs"},"build.rs"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-rust"},'fn main() {\n    #[cfg(target_os = "android")]\n    println!("cargo:rustc-link-lib=c++_shared");\n}\n')),(0,o.kt)("p",null,"Then, in each ",(0,o.kt)("inlineCode",{parentName:"p"},"jniLibs")," architecture directory, put the corresponding ",(0,o.kt)("inlineCode",{parentName:"p"},"libc++_shared.so")," from the Android\nNDK. ",(0,o.kt)("inlineCode",{parentName:"p"},"libc++_shared.so")," is typically located in ",(0,o.kt)("inlineCode",{parentName:"p"},"$ANDROID_NDK/toolchains/llvm/prebuilt/"),". You will have to search for\nit, as it's different for each operating system."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"arm-linux-androideabi -> armeabi-v7a"),(0,o.kt)("li",{parentName:"ul"},"aarch64-linux-android -> arm64-v8a"),(0,o.kt)("li",{parentName:"ul"},"i686-linux-android -> x86"),(0,o.kt)("li",{parentName:"ul"},"x86_64-linux-android -> x86_64")),(0,o.kt)("h2",{id:"issues-on-web"},"Issues on Web?"),(0,o.kt)("p",null,"Check out ",(0,o.kt)("a",{parentName:"p",href:"./miscellaneous/wasm-limitations"},"Limitations on WASM")," for some common problems and solutions\nto adapt existing code to WASM."),(0,o.kt)("h2",{id:"other-problems"},"Other problems?"),(0,o.kt)("p",null,"Don't hesitate to ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/fzyzcjy/flutter_rust_bridge/issues/new/choose"},"open an issue"),"! I usually reply\nwithin minutes or hours (except when sleeping, of course)."))}p.isMDXComponent=!0}}]);