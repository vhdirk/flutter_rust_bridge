"use strict";(self.webpackChunkflutter_rust_bridge=self.webpackChunkflutter_rust_bridge||[]).push([[8934],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>f});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),s=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},u=function(e){var t=s(e.components);return n.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=s(r),f=a,g=d["".concat(c,".").concat(f)]||d[f]||p[f]||i;return r?n.createElement(g,o(o({ref:t},u),{},{components:r})):n.createElement(g,o({ref:t},u))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var s=2;s<i;s++)o[s]=r[s];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},34725:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var n=r(87462),a=(r(67294),r(3905));const i={},o="Creating a new crate",l={unversionedId:"manual/integrate/existing/new-crate",id:"manual/integrate/existing/new-crate",title:"Creating a new crate",description:"First, if you haven't done so already, create a new crate within your project directory",source:"@site/docs/manual/integrate/06-existing/01-new-crate.md",sourceDirName:"manual/integrate/06-existing",slug:"/manual/integrate/existing/new-crate",permalink:"/flutter_rust_bridge/manual/integrate/existing/new-crate",draft:!1,editUrl:"https://github.com/fzyzcjy/flutter_rust_bridge/tree/master/website/docs/manual/integrate/06-existing/01-new-crate.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Use BrickHub to add to existing projects",permalink:"/flutter_rust_bridge/manual/integrate/existing/"},next:{title:"Installing dependencies",permalink:"/flutter_rust_bridge/manual/integrate/existing/deps"}},c={},s=[],u={toc:s};function p(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"creating-a-new-crate"},"Creating a new crate"),(0,a.kt)("p",null,"First, if you haven't done so already, create a new crate within your project directory\nusing ",(0,a.kt)("inlineCode",{parentName:"p"},"cargo new --lib"),". It is recommended that the crate root is a sibling of the other native build\nfolders for ease of config, e.g.:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"\u251c\u2500\u2500 android\n\u251c\u2500\u2500 ios\n\u251c\u2500\u2500 lib\n\u251c\u2500\u2500 linux\n\u251c\u2500\u2500 macos\n\u251c\u2500\u2500 $crate\n\u2502\xa0\xa0 \u251c\u2500\u2500 Cargo.toml\n\u2502\xa0\xa0 \u2514\u2500\u2500 src\n\u251c\u2500\u2500 test\n\u251c\u2500\u2500 web\n\u2514\u2500\u2500 windows\n")),(0,a.kt)("p",null,"Throughout this section we will refer to your crate name as $crate. Unless otherwise noted, the crate folder\nand the crate name will be used interchangeably."),(0,a.kt)("p",null,"Next, add these two lines to your ",(0,a.kt)("inlineCode",{parentName:"p"},"Cargo.toml"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-diff"},'+[lib]\n+crate-type = ["staticlib", "cdylib"]\n')),(0,a.kt)("p",null,"This configures your crate to be output as a static library for MacOS and iOS,\nand a dynamic library on other platforms. Configure this to your needs.\nIf you would like to write tests or benchmarks, append ",(0,a.kt)("inlineCode",{parentName:"p"},'"rlib"')," to the list\nas well."))}p.isMDXComponent=!0}}]);