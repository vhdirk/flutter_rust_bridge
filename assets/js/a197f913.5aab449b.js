"use strict";(self.webpackChunkflutter_rust_bridge=self.webpackChunkflutter_rust_bridge||[]).push([[7315],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>d});var n=r(67294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var s=n.createContext({}),u=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},c=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=u(r),d=i,g=m["".concat(s,".").concat(d)]||m[d]||p[d]||o;return r?n.createElement(g,a(a({ref:t},c),{},{components:r})):n.createElement(g,a({ref:t},c))}));function d(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=r.length,a=new Array(o);a[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,a[1]=l;for(var u=2;u<o;u++)a[u]=r[u];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},82558:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>u});var n=r(87462),i=(r(67294),r(3905));const o={},a="Compatibility and versioning",l={unversionedId:"guides/miscellaneous/compatibility",id:"guides/miscellaneous/compatibility",title:"Compatibility and versioning",description:"Since flutterrustbridge v2, we will try our best to follow semantics versioning",source:"@site/docs/guides/miscellaneous/compatibility.md",sourceDirName:"guides/miscellaneous",slug:"/guides/miscellaneous/compatibility",permalink:"/flutter_rust_bridge/guides/miscellaneous/compatibility",draft:!1,editUrl:"https://github.com/fzyzcjy/flutter_rust_bridge/tree/master/website/docs/guides/miscellaneous/compatibility.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Safety and CI",permalink:"/flutter_rust_bridge/guides/miscellaneous/safety"},next:{title:"Deployment",permalink:"/flutter_rust_bridge/guides/miscellaneous/deployment"}},s={},u=[],c={toc:u};function p(e){let{components:t,...r}=e;return(0,i.kt)("wrapper",(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"compatibility-and-versioning"},"Compatibility and versioning"),(0,i.kt)("p",null,"Since flutter_rust_bridge v2, we will try our best to follow ",(0,i.kt)("a",{parentName:"p",href:"https://semver.org/"},"semantics versioning"),"\nwith the following exceptions."),(0,i.kt)("p",null,"Firstly, all flutter_rust_bridge-related packages will need to have exactly the same version. They are:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Dart package ",(0,i.kt)("inlineCode",{parentName:"li"},"flutter_rust_bridge")," (runtime support)"),(0,i.kt)("li",{parentName:"ul"},"Rust package ",(0,i.kt)("inlineCode",{parentName:"li"},"flutter_rust_bridge")," (runtime support)"),(0,i.kt)("li",{parentName:"ul"},"Rust package ",(0,i.kt)("inlineCode",{parentName:"li"},"flutter_rust_bridge_codegen")," (code generator)"),(0,i.kt)("li",{parentName:"ul"},"Rust package ",(0,i.kt)("inlineCode",{parentName:"li"},"flutter_rust_bridge_macros")," (macros for code generator)")),(0,i.kt)("p",null,"This is because the generated code is working with the runtime support library tightly,\nso it is quite hard to not introduce any breaking change between the auto-generated code and the runtime library.\nIn addition, it seems better to put the limited resources to more important things (e.g. new features) than ensuring this.\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/fzyzcjy/flutter_rust_bridge/issues/1432#issuecomment-1849199332"},"As is pointed out"),",\nthis is not very uncommon, e.g. Apple's Safari is kept in sync with MacOS version,\nand this should not be a problem with upgrade tools."),(0,i.kt)("p",null,"(WIP: (1) Make a tool to check these versions agree at runtime or as a doctor command (2) tool to upgrade them in one command.)"),(0,i.kt)("p",null,"Secondly, some classes with comments explicitly mentioning breaking-change things,\nespecially the ",(0,i.kt)("inlineCode",{parentName:"p"},"Handler")," classes, may contain breaking change in minor version bump.\nThis is because, firstly, the ",(0,i.kt)("inlineCode",{parentName:"p"},"Handler")," contains a lot of generic arguments and implementation details,\nso it is hard to avoid breaking changes (I do not want to bump to flutter_rust_bridge v10 quickly!).\nSecondly, such change usually results in compile-time error.\nTherefore, you can trivially realize it is a breaking change, without introducing any subtle bugs.\nThirdly, it is not very frequently needed to customize ",(0,i.kt)("inlineCode",{parentName:"p"},"Handler")," itself\n(e.g. customizing the ",(0,i.kt)("inlineCode",{parentName:"p"},"ErrorHandler")," is often enough).\nBut even for this, we will try our best to make it happen as rare as possible."))}p.isMDXComponent=!0}}]);