"use strict";(self.webpackChunkflutter_rust_bridge=self.webpackChunkflutter_rust_bridge||[]).push([[1825],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>d});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),m=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=m(e.components);return r.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),c=m(n),d=a,f=c["".concat(l,".").concat(d)]||c[d]||p[d]||i;return n?r.createElement(f,o(o({ref:t},u),{},{components:n})):r.createElement(f,o({ref:t},u))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=c;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var m=2;m<i;m++)o[m]=n[m];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},117:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>s,toc:()=>m});var r=n(87462),a=(n(67294),n(3905));const i={},o="Limitations of WASM",s={unversionedId:"manual/miscellaneous/wasm-limitations",id:"manual/miscellaneous/wasm-limitations",title:"Limitations of WASM",description:"- Safari cannot spawn nested Workers. A workaround is to build two variants of the library,",source:"@site/docs/manual/miscellaneous/04-wasm-limitations.md",sourceDirName:"manual/miscellaneous",slug:"/manual/miscellaneous/wasm-limitations",permalink:"/flutter_rust_bridge/manual/miscellaneous/wasm-limitations",draft:!1,editUrl:"https://github.com/fzyzcjy/flutter_rust_bridge/tree/master/website/docs/manual/miscellaneous/04-wasm-limitations.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Cross-origin in Web",permalink:"/flutter_rust_bridge/manual/miscellaneous/web-cross-origin"},next:{title:"Articles",permalink:"/flutter_rust_bridge/manual/miscellaneous/article/"}},l={},m=[],u={toc:m};function p(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"limitations-of-wasm"},"Limitations of WASM"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Safari cannot spawn nested ",(0,a.kt)("inlineCode",{parentName:"li"},"Worker"),"s. A workaround is to build two variants of the library,\none with multithreading and one without, and serve Safari users the single-threaded variant.\nFor a more general solution, check out ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/GoogleChromeLabs/wasm-feature-detect"},"wasm-feature-detect"),"\nor ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/johanholmerin/nested-worker"},"nested-worker"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"std::thread::spawn")," is unimplemented and replacements (e.g. ",(0,a.kt)("inlineCode",{parentName:"li"},"wasm_thread"),") are not fully supported.\nIf you must use them, consider wrapping your return type in a ",(0,a.kt)("inlineCode",{parentName:"li"},"SyncReturn<_>")," to\navoid the internal thread pool interfering with your threads.\nThis library includes a ",(0,a.kt)("inlineCode",{parentName:"li"},"spawn!")," macro which spawns a new thread using the internal thread pool."),(0,a.kt)("li",{parentName:"ul"},"When a Rust thread panics, it aborts and throws a JavaScript ",(0,a.kt)("inlineCode",{parentName:"li"},"RuntimeError")," that cannot be caught by name in\nDart. This is expected to change as the exception handling story for WASM improves, but a rule of thumb\nis to replace ",(0,a.kt)("inlineCode",{parentName:"li"},".unwrap")," with ",(0,a.kt)("inlineCode",{parentName:"li"},".expect")," or ",(0,a.kt)("inlineCode",{parentName:"li"},"Err"),"s."),(0,a.kt)("li",{parentName:"ul"},"As a consequence, ",(0,a.kt)("inlineCode",{parentName:"li"},"panic::catch_unwind")," does not work on the Web. As of writing, the implementation to\ncatch these errors resides within the bodies of the workers, i.e. it is not straightforward enough to\ngeneralize for other use-cases."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"Int64List")," and ",(0,a.kt)("inlineCode",{parentName:"li"},"Uint64List")," throws when used on Web platforms. They are left intentionally\nunimplemented by the Dart language developers, perhaps due to the differences between ",(0,a.kt)("inlineCode",{parentName:"li"},"int")," and ",(0,a.kt)("inlineCode",{parentName:"li"},"BigInt"),".\nThis library provides a barebones pure Dart shim whose behavior may differ from the specifications,\nso please create an issue/PR if you encounter any significant digression."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"Int64List")," and ",(0,a.kt)("inlineCode",{parentName:"li"},"Uint64List")," arithmetics clamp on native platforms, but wrap on the Web. If your use-case\nrequires precision around large integer values, please be mindful of these platform-specific differences."),(0,a.kt)("li",{parentName:"ul"},"Support for the various components of WASM is not universal among browsers. Here is a (non-exhaustive) list\nof trackers for how widely available some of the features are across browsers:",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://caniuse.com/mdn-api_messageport_messageerror_event"},(0,a.kt)("inlineCode",{parentName:"a"},"MessagePort")," error events")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://caniuse.com/mdn-api_crossoriginisolated"},(0,a.kt)("inlineCode",{parentName:"a"},"crossOriginIsolated"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://caniuse.com/sharedarraybuffer"},"Shared Array Buffers")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://caniuse.com/sharedarraybuffer"},(0,a.kt)("inlineCode",{parentName:"a"},"BroadcastChannel"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://caniuse.com/mdn-javascript_builtins_atomics"},"Atomics")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://caniuse.com/mdn-javascript_builtins_bigint64array"},(0,a.kt)("inlineCode",{parentName:"a"},"BigInt64Array"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://caniuse.com/wasm"},"WebAssembly")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://webassembly.org/roadmap/"},"WebAssembly roadmap")))),(0,a.kt)("li",{parentName:"ul"},"JavaScript runtimes (Node.js, Deno, etc.) support is not yet implemented.")))}p.isMDXComponent=!0}}]);