"use strict";(self.webpackChunkflutter_rust_bridge=self.webpackChunkflutter_rust_bridge||[]).push([[3155],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>p});var r=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var u=r.createContext({}),l=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=l(e.components);return r.createElement(u.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,u=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),m=l(n),p=i,g=m["".concat(u,".").concat(p)]||m[p]||d[p]||a;return n?r.createElement(g,o(o({ref:t},c),{},{components:n})):r.createElement(g,o({ref:t},c))}));function p(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=m;var s={};for(var u in t)hasOwnProperty.call(t,u)&&(s[u]=t[u]);s.originalType=e,s.mdxType="string"==typeof e?e:i,o[1]=s;for(var l=2;l<a;l++)o[l]=n[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},75288:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var r=n(87462),i=(n(67294),n(3905));const a={},o="Integrating with MacOS",s={unversionedId:"manual/integrate/existing/ios/macos",id:"manual/integrate/existing/ios/macos",title:"Integrating with MacOS",description:"The steps required to integrate with MacOS are identical to those of iOS, save for some minor details.",source:"@site/docs/manual/integrate/06-existing/04-ios/macos.md",sourceDirName:"manual/integrate/06-existing/04-ios",slug:"/manual/integrate/existing/ios/macos",permalink:"/flutter_rust_bridge/manual/integrate/existing/ios/macos",draft:!1,editUrl:"https://github.com/fzyzcjy/flutter_rust_bridge/tree/master/website/docs/manual/integrate/06-existing/04-ios/macos.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Using dummy headers",permalink:"/flutter_rust_bridge/manual/integrate/existing/ios/headers"},next:{title:"Integrating with Windows and Linux",permalink:"/flutter_rust_bridge/manual/integrate/existing/desktop"}},u={},l=[{value:"Adding the dummy header",id:"adding-the-dummy-header",level:2},{value:"Using the dummy header",id:"using-the-dummy-header",level:2}],c={toc:l};function d(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"integrating-with-macos"},"Integrating with MacOS"),(0,i.kt)("p",null,"The steps required to integrate with MacOS are identical to those of iOS, save for some minor details."),(0,i.kt)("h2",{id:"adding-the-dummy-header"},"Adding the dummy header"),(0,i.kt)("p",null,"Flutter on MacOS does not inject headers by default, so you will notice the absence of ",(0,i.kt)("inlineCode",{parentName:"p"},"macos/Runner/Runner-Bridging-Header.h"),"\nin the MacOS project config. To fix this, in ",(0,i.kt)("strong",{parentName:"p"},"Build Settings"),", change ",(0,i.kt)("strong",{parentName:"p"},"Objective-C Bridging Header")," to be\n",(0,i.kt)("strong",{parentName:"p"},"Runner/bridge_generated.h"),"."),(0,i.kt)("h2",{id:"using-the-dummy-header"},"Using the dummy header"),(0,i.kt)("p",null,"Likewise, you will notice that in ",(0,i.kt)("inlineCode",{parentName:"p"},"macos/Runner/AppDelegate.swift")," there is no ",(0,i.kt)("inlineCode",{parentName:"p"},"func application")," anymore.\nIt is sufficient to use ",(0,i.kt)("inlineCode",{parentName:"p"},"dummy_method_to_enfore_binding")," anywhere in this file, as long as XCode does\nnot consider it dead code."))}d.isMDXComponent=!0}}]);