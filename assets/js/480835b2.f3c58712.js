"use strict";(self.webpackChunkflutter_rust_bridge=self.webpackChunkflutter_rust_bridge||[]).push([[6624],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var r=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var u=r.createContext({}),s=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(u.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,u=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=s(n),f=i,m=d["".concat(u,".").concat(f)]||d[f]||c[f]||a;return n?r.createElement(m,o(o({ref:t},p),{},{components:n})):r.createElement(m,o({ref:t},p))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=d;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var s=2;s<a;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},47531:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>c,frontMatter:()=>a,metadata:()=>l,toc:()=>s});var r=n(87462),i=(n(67294),n(3905));const a={},o="Initialization",l={unversionedId:"guides/how-to/init",id:"guides/how-to/init",title:"Initialization",description:"Use [frb(init)]",source:"@site/docs/guides/how-to/init.md",sourceDirName:"guides/how-to",slug:"/guides/how-to/init",permalink:"/flutter_rust_bridge/guides/how-to/init",draft:!1,editUrl:"https://github.com/fzyzcjy/flutter_rust_bridge/tree/master/website/docs/guides/how-to/init.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Customize Rust library loading",permalink:"/flutter_rust_bridge/guides/how-to/load-library"},next:{title:"Stateful Rust",permalink:"/flutter_rust_bridge/guides/how-to/stateful-rust"}},u={},s=[{value:"Use <code>#[frb(init)]</code>",id:"use-frbinit",level:2},{value:"Alternative approach",id:"alternative-approach",level:2}],p={toc:s};function c(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"initialization"},"Initialization"),(0,i.kt)("h2",{id:"use-frbinit"},"Use ",(0,i.kt)("inlineCode",{parentName:"h2"},"#[frb(init)]")),(0,i.kt)("p",null,"If you want to initialize the Rust side during Flutter/Dart startup,\njust use ",(0,i.kt)("inlineCode",{parentName:"p"},"#[frb(init)]")," annotation on functions."),(0,i.kt)("p",null,"For example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-rust"},"#[frb(init)]\npub fn lets_init_app_here() {\n    // ...\n}\n")),(0,i.kt)("p",null,"Indeed, the ",(0,i.kt)("inlineCode",{parentName:"p"},"flutter_rust_bridge_codegen create")," already creates an init function, ",(0,i.kt)("inlineCode",{parentName:"p"},"init_app"),", for you."),(0,i.kt)("p",null,"Remark: The function needs to be inside your Rust input folder, otherwise it is simply ignored."),(0,i.kt)("h2",{id:"alternative-approach"},"Alternative approach"),(0,i.kt)("p",null,"Alternatively, if you do not want to use the annotation above,\njust simply call arbitrary Rust function as you like.\nThere is nothing special about initialization compared to normal execution."),(0,i.kt)("p",null,"For example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-dart"},"Future<void> main() async {\n  await RustLib.init();\n  await myRustInitLogic(); // or `sync` if you like\n  // ...\n}\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-rust"},"fn my_rust_init_logic() {\n    // initialize whatever things here\n}\n")))}c.isMDXComponent=!0}}]);