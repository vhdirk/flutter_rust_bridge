"use strict";(self.webpackChunkflutter_rust_bridge=self.webpackChunkflutter_rust_bridge||[]).push([[8439],{3905:(e,t,r)=>{r.d(t,{Zo:()=>s,kt:()=>c});var a=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var u=a.createContext({}),p=function(e){var t=a.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},s=function(e){var t=p(e.components);return a.createElement(u.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,u=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),d=p(r),c=n,k=d["".concat(u,".").concat(c)]||d[c]||m[c]||i;return r?a.createElement(k,l(l({ref:t},s),{},{components:r})):a.createElement(k,l({ref:t},s))}));function c(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,l=new Array(i);l[0]=d;var o={};for(var u in t)hasOwnProperty.call(t,u)&&(o[u]=t[u]);o.originalType=e,o.mdxType="string"==typeof e?e:n,l[1]=o;for(var p=2;p<i;p++)l[p]=r[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},22926:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>u,contentTitle:()=>l,default:()=>m,frontMatter:()=>i,metadata:()=>o,toc:()=>p});var a=r(87462),n=(r(67294),r(3905));const i={},l="Setup",o={unversionedId:"manual/integrate/library/overview/setup",id:"manual/integrate/library/overview/setup",title:"Setup",description:"Dependencies",source:"@site/docs/manual/integrate/07-library/01-overview/01-setup.md",sourceDirName:"manual/integrate/07-library/01-overview",slug:"/manual/integrate/library/overview/setup",permalink:"/flutter_rust_bridge/manual/integrate/library/overview/setup",draft:!1,editUrl:"https://github.com/fzyzcjy/flutter_rust_bridge/tree/master/website/docs/manual/integrate/07-library/01-overview/01-setup.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Overview",permalink:"/flutter_rust_bridge/manual/integrate/library/overview/"},next:{title:"Monorepo with Melos",permalink:"/flutter_rust_bridge/manual/integrate/library/overview/melos"}},u={},p=[{value:"Dependencies",id:"dependencies",level:2},{value:"Required",id:"required",level:3},{value:"Optional",id:"optional",level:3},{value:"Repository Structure",id:"repository-structure",level:2}],s={toc:p};function m(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,a.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"setup"},"Setup"),(0,n.kt)("h2",{id:"dependencies"},"Dependencies"),(0,n.kt)("p",null,"To start developing your Dart/Flutter library, you will need to download some dependencies locally."),(0,n.kt)("h3",{id:"required"},"Required"),(0,n.kt)("p",null,"The rest of this guide assumes you have the following tools installed on any development machines:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://docs.flutter.dev/get-started/install"},"Flutter")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://rustup.rs"},"rustup")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://melos.invertase.dev"},"Melos")," (needed for our monorepo, see ",(0,n.kt)("a",{parentName:"li",href:"melos"},"here"),")",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"dart pub global activate melos")," to install once Dart/Flutter are installed")))),(0,n.kt)("h3",{id:"optional"},"Optional"),(0,n.kt)("p",null,"If you would like to build your binaries (for Flutter devices) locally in addition to CI\n(say, to test on a real device or emulator), you will additionally need the following:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"To compile to macOS/iOS targets",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"macOS"))),(0,n.kt)("li",{parentName:"ul"},"To cross-compile to Android targets",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://developer.android.com/ndk/downloads"},"Android NDK"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Most NDK versions should work nowadays due to fixes in ",(0,n.kt)("inlineCode",{parentName:"li"},"cargo-ndk"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Previously, NDK version 21 (",(0,n.kt)("inlineCode",{parentName:"li"},"r21e"),") was the only one that could be used easily",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"You might see reference to this elsewhere, but that is largely out of date"))),(0,n.kt)("li",{parentName:"ul"},"NDK version 25 (",(0,n.kt)("inlineCode",{parentName:"li"},"r25b"),") was working at the time of writing this documentation"))))))),(0,n.kt)("li",{parentName:"ul"},"To cross-compile to Windows/Linux targets",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://ziglang.org/learn/getting-started/#installing-zig"},"Zig")),(0,n.kt)("li",{parentName:"ul"},"llvm (with ",(0,n.kt)("inlineCode",{parentName:"li"},"clang-cl"),"!)",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Need to run ",(0,n.kt)("inlineCode",{parentName:"li"},"brew install llvm")," on macOS since Apple's llvm doesn't have it")))))),(0,n.kt)("h2",{id:"repository-structure"},"Repository Structure"),(0,n.kt)("p",null,"We will be using the following structure for our repository, assuming our library name is ",(0,n.kt)("inlineCode",{parentName:"p"},"library_name"),":"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},".github/")," for CI/CD (with GitHub Actions) & dependabot"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"packages/")," where our Flutter/Dart packages will live",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"library_name/")," the Dart-only (library) package using flutter_rust_bridge (FRB)",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"native/")," the Rust library used by Dart"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"test/")," unit tests for our Dart-only library"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"example/")," an example project showing how to use ",(0,n.kt)("inlineCode",{parentName:"li"},"library_name")," from Dart-only",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"test/")," (optional) tests for the example; can be used to ensure example continues to work in CI"))))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"flutter_library_name/")," the Flutter (library) package wrapping around ",(0,n.kt)("inlineCode",{parentName:"li"},"library_name")," for ease of use",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"android/"),", ",(0,n.kt)("inlineCode",{parentName:"li"},"ios/"),", ",(0,n.kt)("inlineCode",{parentName:"li"},"linux/"),", ",(0,n.kt)("inlineCode",{parentName:"li"},"macos/"),", & ",(0,n.kt)("inlineCode",{parentName:"li"},"windows/")," for platform-specific wrappers in order to bundle our library binaries with Flutter applications"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"test/")," unit tests for our Flutter library (note: there might not be any if your Flutter library does not add any Flutter-specific functionality; in that case, add a dummy test in so CI is happy)"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"example/")," an example project showing how to use ",(0,n.kt)("inlineCode",{parentName:"li"},"flutter_library_name")," from within a Flutter application",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"integration_test/")," integration tests to ensure your Flutter library, example, and platform-specific configuration are all working together correctly"))))))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"scripts/")," build Flutter binaries and handle release creation"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"platform-build/")," the output (build) folder for all created Flutter binaries"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"analysis_options.yaml")," to enable consistent Dart analysis in our Dart/Flutter libraries"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"Cargo.toml")," so IDEs can find our Rust project under ",(0,n.kt)("inlineCode",{parentName:"li"},"packages/library_name/native")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"melos.yaml")," to configure the monorepo, see more ",(0,n.kt)("a",{parentName:"li",href:"melos"},"here"))))}m.isMDXComponent=!0}}]);