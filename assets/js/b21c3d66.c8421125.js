"use strict";(self.webpackChunkflutter_rust_bridge=self.webpackChunkflutter_rust_bridge||[]).push([[9633],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>m});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=r.createContext({}),d=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},s=function(e){var t=d(e.components);return r.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,u=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),c=d(n),m=a,f=c["".concat(u,".").concat(m)]||c[m]||p[m]||i;return n?r.createElement(f,l(l({ref:t},s),{},{components:n})):r.createElement(f,l({ref:t},s))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,l=new Array(i);l[0]=c;var o={};for(var u in t)hasOwnProperty.call(t,u)&&(o[u]=t[u]);o.originalType=e,o.mdxType="string"==typeof e?e:a,l[1]=o;for(var d=2;d<i;d++)l[d]=n[d];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},96174:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>l,default:()=>p,frontMatter:()=>i,metadata:()=>o,toc:()=>d});var r=n(87462),a=(n(67294),n(3905));const i={},l="Using build_runner",o={unversionedId:"manual/integrate/template/generate/build-runner",id:"manual/integrate/template/generate/build-runner",title:"Using build_runner",description:"Inspect your lib/bridge_generated.dart and you will see that the definition of Platform has changed:",source:"@site/docs/manual/integrate/05-template/03-generate/03-build-runner.md",sourceDirName:"manual/integrate/05-template/03-generate",slug:"/manual/integrate/template/generate/build-runner",permalink:"/flutter_rust_bridge/manual/integrate/template/generate/build-runner",draft:!1,editUrl:"https://github.com/fzyzcjy/flutter_rust_bridge/tree/master/website/docs/manual/integrate/05-template/03-generate/03-build-runner.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Adding new code",permalink:"/flutter_rust_bridge/manual/integrate/template/generate/adding-code"},next:{title:"Wrapping up",permalink:"/flutter_rust_bridge/manual/integrate/template/generate/finish"}},u={},d=[],s={toc:d};function p(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"using-build_runner"},"Using ",(0,a.kt)("inlineCode",{parentName:"h1"},"build_runner")),(0,a.kt)("p",null,"Inspect your ",(0,a.kt)("inlineCode",{parentName:"p"},"lib/bridge_generated.dart")," and you will see that the definition of ",(0,a.kt)("inlineCode",{parentName:"p"},"Platform")," has changed:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-dart"},"@freezed\nsealed class Platform with _$Platform {\n    const factory Platform.unknown() = Platform_Unknown;\n    const factory Platform.android() = Platform_Android;\n    const factory Platforn.ios() = Platform_Ios;\n    const factory Platform.windows() = Platform_Windows;\n    const factory Platform.unix() = Platform_Unix;\n    const factory Platform.macOs(\n        String field0,\n    ) = Platform_MacOs;\n    const factory Platform.wasm() = Platform_Wasm;\n}\n")),(0,a.kt)("p",null,"It is no longer a plain enum, but a full-blown enum class with variants! As it is right now, this code\ncannot compile yet since it is missing some components, namely the ",(0,a.kt)("a",{parentName:"p",href:"https://pub.dev/packages/freezed"},(0,a.kt)("inlineCode",{parentName:"a"},"freezed"))," library. ",(0,a.kt)("a",{parentName:"p",href:"https://pub.dev/packages/freezed"},(0,a.kt)("inlineCode",{parentName:"a"},"freezed"))," is a\ncodegen library similar to those we've encountered thus far, but generates more Dart code instead.\nAll such libraries perform their code generation upon invoking ",(0,a.kt)("inlineCode",{parentName:"p"},"build_runner"),", i.e. when ",(0,a.kt)("inlineCode",{parentName:"p"},"flutter pub run build_runner build")," is executed."),(0,a.kt)("p",null,"Regardless, to make this code compile again, we need to make a few changes:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Run the following commands to add the latest version of ",(0,a.kt)("a",{parentName:"li",href:"https://pub.dev/packages/freezed"},(0,a.kt)("inlineCode",{parentName:"a"},"freezed")),":")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"flutter pub add -d build_runner\nflutter pub add -d freezed\nflutter pub add freezed_annotation\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Update ",(0,a.kt)("inlineCode",{parentName:"li"},"justfile")," to run ",(0,a.kt)("inlineCode",{parentName:"li"},"build_runner")," after Rust codegen:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-diff"}," gen:\n     ..\n     # Uncomment this line to invoke build_runner as well\n-    # flutter pub run build_runner build\n+    flutter pub run build_runner build\n")),(0,a.kt)("p",null,"Now calling ",(0,a.kt)("inlineCode",{parentName:"p"},"just")," will generate both the Rust bindings ",(0,a.kt)("em",{parentName:"p"},"and")," the Dart library code."))}p.isMDXComponent=!0}}]);