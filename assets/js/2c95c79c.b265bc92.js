"use strict";(self.webpackChunkflutter_rust_bridge=self.webpackChunkflutter_rust_bridge||[]).push([[6127],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>y});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var u=n.createContext({}),p=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},l=function(e){var t=p(e.components);return n.createElement(u.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,u=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),c=p(r),y=o,m=c["".concat(u,".").concat(y)]||c[y]||d[y]||a;return r?n.createElement(m,s(s({ref:t},l),{},{components:r})):n.createElement(m,s({ref:t},l))}));function y(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,s=new Array(a);s[0]=c;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i.mdxType="string"==typeof e?e:o,s[1]=i;for(var p=2;p<a;p++)s[p]=r[p];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}c.displayName="MDXCreateElement"},68475:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>u,contentTitle:()=>s,default:()=>d,frontMatter:()=>a,metadata:()=>i,toc:()=>p});var n=r(87462),o=(r(67294),r(3905));const a={},s="Dispose",i={unversionedId:"guides/types/arbitrary/rust-auto-opaque/dispose",id:"guides/types/arbitrary/rust-auto-opaque/dispose",title:"Dispose",description:"Every such RustAutoOpaque object has a dispose() method,",source:"@site/docs/guides/types/arbitrary/rust-auto-opaque/dispose.md",sourceDirName:"guides/types/arbitrary/rust-auto-opaque",slug:"/guides/types/arbitrary/rust-auto-opaque/dispose",permalink:"/flutter_rust_bridge/guides/types/arbitrary/rust-auto-opaque/dispose",draft:!1,editUrl:"https://github.com/fzyzcjy/flutter_rust_bridge/tree/master/website/docs/guides/types/arbitrary/rust-auto-opaque/dispose.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Ownership",permalink:"/flutter_rust_bridge/guides/types/arbitrary/rust-auto-opaque/ownership"},next:{title:"RustAutoOpaque struct",permalink:"/flutter_rust_bridge/guides/types/arbitrary/rust-auto-opaque/struct"}},u={},p=[],l={toc:p};function d(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"dispose"},"Dispose"),(0,o.kt)("p",null,"Every such ",(0,o.kt)("inlineCode",{parentName:"p"},"RustAutoOpaque")," object has a ",(0,o.kt)("inlineCode",{parentName:"p"},"dispose()")," method,\nwhich immediately frees the underlying resource\n(tech details if you are worried: indeed decrease the reference count, so dispose-when-use is no problem).\nBut even if you do not call it,\nwhen Dart does garbage collection (GC),\nthe same thing will be automatically triggered."),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"dispose")," method mimics the standard pattern in Flutter -\nwe have ",(0,o.kt)("inlineCode",{parentName:"p"},"dispose")," for ",(0,o.kt)("inlineCode",{parentName:"p"},"ui.Image"),", etc."),(0,o.kt)("p",null,"Should we call ",(0,o.kt)("inlineCode",{parentName:"p"},"dispose")," manually?\nThis is discussed thoroughly in ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/dart-lang/sdk/issues/54233"},"this thread"),"\nand ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/dart-lang/native/issues/848"},"this related thread"),".\nFor full information, please refer to those posts directly.\nIn short, thanks to @dcharkes @dnfield @HosseinYousefi @lrhn @mkustermann (ordered alphabetically),\nwhen your underlying Rust objects are huge or takes precious resources (e.g. opens a file),\ndo manual ",(0,o.kt)("inlineCode",{parentName:"p"},"dispose")," to ensure you release the resource as soon as you do not need them;\notherwise, there is usually no worry about manual dispose calls."))}d.isMDXComponent=!0}}]);