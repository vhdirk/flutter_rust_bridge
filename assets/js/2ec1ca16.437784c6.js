"use strict";(self.webpackChunkflutter_rust_bridge=self.webpackChunkflutter_rust_bridge||[]).push([[3009],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>m});var n=r(67294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var u=n.createContext({}),s=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},p=function(e){var t=s(e.components);return n.createElement(u.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,a=e.originalType,u=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=s(r),m=i,f=d["".concat(u,".").concat(m)]||d[m]||c[m]||a;return r?n.createElement(f,o(o({ref:t},p),{},{components:r})):n.createElement(f,o({ref:t},p))}));function m(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=r.length,o=new Array(a);o[0]=d;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var s=2;s<a;s++)o[s]=r[s];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},676:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>c,frontMatter:()=>a,metadata:()=>l,toc:()=>s});var n=r(87462),i=(r(67294),r(3905));const a={},o="Provide parameters",l={unversionedId:"guides/custom/codegen/inputs",id:"guides/custom/codegen/inputs",title:"Provide parameters",description:"It is equivalent to provide a parameter using the three approaches below.",source:"@site/docs/guides/custom/codegen/inputs.md",sourceDirName:"guides/custom/codegen",slug:"/guides/custom/codegen/inputs",permalink:"/flutter_rust_bridge/guides/custom/codegen/inputs",draft:!1,editUrl:"https://github.com/fzyzcjy/flutter_rust_bridge/tree/master/website/docs/guides/custom/codegen/inputs.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Code generator",permalink:"/flutter_rust_bridge/guides/custom/codegen/"},next:{title:"Full list of parameters",permalink:"/flutter_rust_bridge/guides/custom/codegen/full-list"}},u={},s=[{value:"Configuration file",id:"configuration-file",level:2},{value:"Command line arguments",id:"command-line-arguments",level:2},{value:"Inside <code>pubspec.yaml</code>",id:"inside-pubspecyaml",level:2}],p={toc:s};function c(e){let{components:t,...r}=e;return(0,i.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"provide-parameters"},"Provide parameters"),(0,i.kt)("p",null,"It is equivalent to provide a parameter using the three approaches below."),(0,i.kt)("p",null,"In addition, you can provide configs by both configuration file / pubspec.yaml and command line at the same time.\nThe latter takes precedence when in conflict."),(0,i.kt)("h2",{id:"configuration-file"},"Configuration file"),(0,i.kt)("p",null,"The suggested mode to run ",(0,i.kt)("inlineCode",{parentName:"p"},"flutter_rust_bridge_codegen"),",\nis to create ",(0,i.kt)("inlineCode",{parentName:"p"},"flutter_rust_bridge.yaml")," configuration file,\nand invoke command line without arguments."),(0,i.kt)("p",null,"All these file names work\n(though I personally suggest to use ",(0,i.kt)("inlineCode",{parentName:"p"},"flutter_rust_bridge.yaml"),',\nbecause it matches the Flutter convention, the "',(0,i.kt)("inlineCode",{parentName:"p"},"pubspec.yaml"),'"):'),(0,i.kt)("details",null,(0,i.kt)("summary",null,"Full name list"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},".flutter_rust_bridge.yml")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},".flutter_rust_bridge.yaml")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},".flutter_rust_bridge.json")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"flutter_rust_bridge.yml")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"flutter_rust_bridge.yaml")," (suggested)"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"flutter_rust_bridge.json")))),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"flutter_rust_bridge_codegen create/integrate")," already creates a configuration file for you,\nwhich is often sufficient."),(0,i.kt)("p",null,"The parameter names are the same as the one shown in command line help,\nexcept that there are no ",(0,i.kt)("inlineCode",{parentName:"p"},"no_")," negations here.\nYou can also refer to the fields of\n",(0,i.kt)("a",{parentName:"p",href:"https://docs.rs/flutter_rust_bridge_codegen/latest/lib_flutter_rust_bridge_codegen/codegen/struct.Config.html"},"this struct"),"\nfor parameter names.\nAnyway, if a wrong name is provided, it will be immediately recognized and reported."),(0,i.kt)("h2",{id:"command-line-arguments"},"Command line arguments"),(0,i.kt)("p",null,"For example, suppose you want to provide ",(0,i.kt)("inlineCode",{parentName:"p"},"rust_input")," argument,\nthen just do ",(0,i.kt)("inlineCode",{parentName:"p"},"--rust-input your_value"),"."),(0,i.kt)("h2",{id:"inside-pubspecyaml"},"Inside ",(0,i.kt)("inlineCode",{parentName:"h2"},"pubspec.yaml")),(0,i.kt)("p",null,"Similarly, if you're calling ",(0,i.kt)("inlineCode",{parentName:"p"},"flutter_rust_bridge_codegen")," from the root of your Dart project,\nyou can also fill in your config under the ",(0,i.kt)("inlineCode",{parentName:"p"},"flutter_rust_bridge")," entry in ",(0,i.kt)("inlineCode",{parentName:"p"},"pubspec.yaml"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"# put this somewhere in your pubspec.yaml\nflutter_rust_bridge:\n  rust_input: crate::api\n  rust_root: rust/\n  dart_output: lib/src/rust\n  # ...\n")))}c.isMDXComponent=!0}}]);